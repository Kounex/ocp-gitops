apiVersion: v1
kind: ServiceAccount
metadata:
  name: patch-cluster-api-cert
  namespace: cert-manager-operator
  annotations:
    argocd.argoproj.io/sync-wave: '140'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: patch-cluster-api-cert
  annotations:
    argocd.argoproj.io/sync-wave: '140'
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - config.openshift.io
    resources:
      - apiservers
    verbs:
      - get
      - list
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: patch-cluster-api-cert
  annotations:
    argocd.argoproj.io/sync-wave: '140'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: patch-cluster-api-cert
subjects:
  - kind: ServiceAccount
    name: patch-cluster-api-cert
    namespace: cert-manager-operator
---
apiVersion: batch/v1
kind: Job
metadata:
  name: patch-cluster-api-cert
  namespace: cert-manager-operator
  annotations:
    argocd.argoproj.io/sync-wave: '140'
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
        - image: openshift/origin-cli
          env:
            - name: API_HOST_NAME
              value: api.ocp.kounex.com
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              if oc get secret openshift-api-certificate -n cert-manager-operator; then
                oc patch apiserver cluster --type=merge -p '{"spec":{"servingCerts": {"namedCertificates": [{"names": ["'$API_HOST_NAME'"], "servingCertificate": {"name": "openshift-api-certificate"}}]}}}'
              else
                echo "Could not execute sync as secret 'openshift-api-certificate' in namespace 'cert-manager-operator' does not exist, check status of CertificationRequest"
                exit 1
              fi
          name: patch-cluster-api-cert
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      serviceAccount: patch-cluster-api-cert
      serviceAccountName: patch-cluster-api-cert
