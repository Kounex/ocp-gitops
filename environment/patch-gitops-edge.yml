apiVersion: v1
kind: ServiceAccount
metadata:
  name: patch-gitops-edge
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: patch-gitops-edge
  namespace: openshift-gitops
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - 'argoproj.io'
    resources:
      - argocds
    verbs:
      - get
      - list
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: patch-gitops-edge
  namespace: openshift-gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: patch-gitops-edge
subjects:
  - kind: ServiceAccount
    name: patch-gitops-edge
    namespace: openshift-gitops
---
apiVersion: batch/v1
kind: Job
metadata:
  name: patch-gitops-edge
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
        - image: openshift/origin-cli
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              if oc get secret openshift-gitops-cluster -n openshift-gitops; then
                oc -n openshift-gitops patch argocd/openshift-gitops --type=merge -p='{"spec":{"server":{"insecure":true,"route":{"enabled":true,"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"}}}}}'
              else
                echo "OpenShift GitOps does not seem to be installed (properly)"
                exit 1
              fi
          name: patch-gitops-edge
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      serviceAccount: patch-gitops-edge
      serviceAccountName: patch-gitops-edge
